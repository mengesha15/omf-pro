
Seedign multiple models with foreign key constraint

/*$loanService = LoanService::factory()->create();
        Branch::factory(4)->has(Employee::factory()->count(2)->has(User::Factory()->count(1)->has(Borrower::factory()->count(1)->for($loanService))))->create();
*/



// $roles = Role::all();

        // $posts = Post::factory()
        //     ->count(3)
        //     ->for(User::factory()->state([
        //         'name' => 'Jessica Archer',
        //     ]))
        //     ->create();

        // $user = User::factory()->create();

        // $posts = Post::factory()
        //             ->count(3)
        //             ->for($user)
        //             ->create();



        /* $employees = Employee::all();
        return view('dashboards/admins/index', ['employees'=>$employees])
        return dd($employee);
        ;*/



Input validation
        return [
                    'fname' => 'required|max:255|regex:/^[a-zA-ZÑñ\s]+$/',
                    'lname' => 'required|max:255|regex:/^[a-zA-ZÑñ\s]+$/',
                    'mname' => 'max:255|alpha',
                     'file' => 'image|mimes:jpg,jpeg,png',
               'contact_no' => 'regex:/^[-0-9\+]+$/',
            'date_of_birth' => 'required|date_format:Y-m-d',
                'school_id' => 'required|exists:schools,id',
                'degree_id' => 'required|exists:degrees,id',
        ];





</script>




 $('#enquiry_form').validate({
  rules:{
  name:"required",
  email:{
  required:true,
  email:true
  },
  mobile:{
      required:true,
  minlength:9,
  maxlength:10,
  number: true
  },
  messages:{
  name:"Please enter your username..!",
  email:"Please enter your email..!",
      mobile:"Enter your mobile no"
  },
  submitHandler: function(form) {alert("working");
  //write your success code here
  }
  });




  var phoneNumber = 8882070980;
            var filter = /^((\+[1-9]{1,4}[ \-]*)|(\([0-9]{2,3}\)[ \-]*)|([0-9]{2,4})[ \-]*)*?[0-9]{3,4}?[ \-]*[0-9]{3,4}?$/;

            if (filter.test(phoneNumber)) {
              if(phoneNumber.length==10){
                   var validate = true;
              } else {
                  alert('Please put 10  digit mobile number');
                  var validate = false;
              }
            }
            else {
              alert('Not a valid number');
              var validate = false;
            }

         if(validate){
          //number is equal to 10 digit or number is not string
          enter code here...
        }



//Laravel 8 Tutorial - Join Multiple Table using Eloquent Model


<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Models\Country;

class JointableController extends Controller
{
    function index()
    {
    	$data = Country::join('state', 'state.country_id', '=', 'country.country_id')
              		->join('city', 'city.state_id', '=', 'state.state_id')
              		->get(['country.country_name', 'state.state_name', 'city.city_name']);

       	/*Above code will produce following query

        Select
        	`country`.`country_name`,
        	`state`.`state_name`,
        	`city`.`city_name`
        from `country`
        inner join `state`
        	on `state`.`country_id` = `country`.`country_id`
        inner join `city`
        	on `city`.`state_id` = `state`.`state_id`

        */

        return view('join_table', compact('data'));


Check file is exist or not

// if ($request->hasFile('borrower_photo')) {
        //     $profile_photo = $request->file('borrower_photo');
        //     $extension = $profile_photo->getClientOriginalExtension();
        //     // $photo_nmae = $request->file('employee_photo')->getClientOriginalName();
        //     $photo_nmae = time() . "." . $extension;
        //     $profile_photo->move('uploads/borrower_photo', $photo_nmae);
        //     $new_borrower->borrower_photo = $photo_nmae;
        // } else {
        //     return redirect()->route('customerServiceOfficer.add_new_request');
        // }










Centered image

<img  src="{{ asset('uploads/borrower_photo/'.$borrower->borrower_photo) }}" alt="Borrower profile" class="mx-auto d-block">




$employee = Employee::find($id);
        if(!$employee){
            abort(404);
        }









Route::get('/api_transactions', [ApiTransactionController::class, 'index'])->middleware('auth')->name('api_transactions');
Route::get('/api_transactions/{id}', [ApiTransactionController::class, 'getById'])->middleware('auth');
//ApiTransactionController method -
	public function index(Request $request){
		$data['page'] ='api_transactions';
		$data['api_transactions'] = ApiTransaction::orderBy('transactionId','desc')->get();
		return view('api_transactions.index',$data);
	}
//api_transactions.index view
<div class="container">
	<div class="title_box">
		<h1 class="primary_title">API Transactions</h1>
	</div>
    <div class="row justify-content-center">
        <div class="col-md-12">
        <table id="example" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Transaction ID</th>
                <th>Platform</th>
                <th>API Type</th>
                <th>Method Name</th>
                <th>Response Code</th>
				<th>Response Message</th>
				<th>Created At</th>
				<th>Action</th>
            </tr>
        </thead>
        <tbody>
	if($api_transactions)
		foreach($api_transactions as $val)
            <tr if($val->response_code == '200') class="success-row" else class="error-row" endif >
                <td>{{$val->transactionId}}</td>
				<td>{{$val->plateform}}</td>
				<td>{{$val->api_type}}</td>
				<td>{{$val->method_name}}</td>
				<td>{{$val->response_code}}</td>
				<td>{!!$val->response_message!!}</td>
				<td>{{date('d-m-Y H:i:s',strtotime($val->created_at))}}</td>
				<td>
					<a class="btn-link" href="{{url('/api_transactions')}}/{{$val->transactionId}}" title="View API Transaction Detail" ><i class="fa fa-eye" aria-hidden="true"></i></a>

					if($val->response_code != '200')

						<a class="btn-link ml-3" href="{{url('/edit_api_call/')}}/{{$val->transactionId}}" title="Re-Submit API Call" ><i class="fa fa-pencil" aria-hidden="true"></i></a>

					else
						<a class="btn-default ml-3" href="javascript:void(0);" style="color:gray;cursor: no-drop;"><i class="fa fa-pencil" aria-hidden="true"></i></a>
					endif
				</td>
            </tr>
		endforeach
	endif
        </tbody>
        <tfoot>
            <tr>
                <th>Transaction ID</th>
                <th>Platform</th>
                <th>API Type</th>
                <th>Method Name</th>
                <th>Response Code</th>
				<th>Response Message</th>
				<th>Created At</th>
				<th>Action</th>
            </tr>
        </tfoot>
    </table>

        </div>
    </div>
</div>
